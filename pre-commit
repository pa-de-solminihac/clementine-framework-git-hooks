#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow UTF-8 BOM in PHP files set this variable to true.
allowutf8bominphp=$(git config --bool hooks.allowutf8bominphp)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allowutf8bominphp" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
    test $(head -c 3 $(git diff --cached --name-only) | xxd -p | grep -c 'efbbbf' | 
        awk '{ sum += $1; } END { print sum; }' "$@") != 0
then
	cat <<\EOF
Error: Attempt to add a PHP file with UTF-8 BOM

This can cause problems. To see the list of PHP files with BOM try: 
  find . -iname '*.php' -exec grep -lI $'\xEF\xBB\xBF' {} \;

If you know what you are doing you can disable this check using:

  git config hooks.allowutf8bominphp true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against -- | grep '\.php:'
